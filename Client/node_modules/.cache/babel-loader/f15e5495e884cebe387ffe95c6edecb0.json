{"ast":null,"code":"var _jsxFileName = \"/Users/kong/workspace/indivisual/dwitter/Client/src/components/TweetCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { memo, useState } from 'react';\nimport parseDate from '../util/date';\nimport Avatar from './Avatar';\nimport EditTweetForm from './EditTweetForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TweetCard = /*#__PURE__*/memo(_c = _s(_ref => {\n  _s();\n  let {\n    tweet,\n    owner,\n    onDelete,\n    onUpdate,\n    onUsernameClick\n  } = _ref;\n  const {\n    id,\n    username,\n    name,\n    url,\n    text,\n    createdAt\n  } = tweet;\n  const [editing, setEditing] = useState(false);\n  const onClose = () => setEditing(false);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"tweet\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"tweet-container\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        url: url,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tweet-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tweet-username\",\n          onClick: () => onUsernameClick(tweet),\n          children: [\"@\", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tweet-date\",\n          children: [\" \\xB7 \", parseDate(createdAt)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), editing && /*#__PURE__*/_jsxDEV(EditTweetForm, {\n          tweet: tweet,\n          onUpdate: onUpdate,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), owner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet-action\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tweet-action-btn\",\n        onClick: () => onDelete(id),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tweet-action-btn\",\n        onClick: () => setEditing(true),\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n}, \"8NtxifNHNH77GP4fOyN5Q3EVoDA=\"));\n_c2 = TweetCard;\nexport default TweetCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"TweetCard$memo\");\n$RefreshReg$(_c2, \"TweetCard\");","map":{"version":3,"names":["React","memo","useState","parseDate","Avatar","EditTweetForm","jsxDEV","_jsxDEV","TweetCard","_c","_s","_ref","tweet","owner","onDelete","onUpdate","onUsernameClick","id","username","name","url","text","createdAt","editing","setEditing","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c2","$RefreshReg$"],"sources":["/Users/kong/workspace/indivisual/dwitter/Client/src/components/TweetCard.jsx"],"sourcesContent":["import React, { memo, useState } from 'react';\nimport parseDate from '../util/date';\nimport Avatar from './Avatar';\nimport EditTweetForm from './EditTweetForm';\n\nconst TweetCard = memo(\n  ({ tweet, owner, onDelete, onUpdate, onUsernameClick }) => {\n    const { id, username, name, url, text, createdAt } = tweet;\n    const [editing, setEditing] = useState(false);\n    const onClose = () => setEditing(false);\n\n    return (\n      <li className='tweet'>\n        <section className='tweet-container'>\n          <Avatar url={url} name={name} />\n          <div className='tweet-body'>\n            <span className='tweet-name'>{name}</span>\n            <span\n              className='tweet-username'\n              onClick={() => onUsernameClick(tweet)}\n            >\n              @{username}\n            </span>\n            <span className='tweet-date'> · {parseDate(createdAt)}</span>\n            <p>{text}</p>\n            {editing && (\n              <EditTweetForm\n                tweet={tweet}\n                onUpdate={onUpdate}\n                onClose={onClose}\n              />\n            )}\n          </div>\n        </section>\n        {owner && (\n          <div className='tweet-action'>\n            <button className='tweet-action-btn' onClick={() => onDelete(id)}>\n              x\n            </button>\n            <button\n              className='tweet-action-btn'\n              onClick={() => setEditing(true)}\n            >\n              ✎\n            </button>\n          </div>\n        )}\n      </li>\n    );\n  }\n);\nexport default TweetCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}