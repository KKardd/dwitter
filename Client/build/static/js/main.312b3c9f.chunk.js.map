{"version":3,"sources":["components/Header.jsx","components/Banner.jsx","components/NewTweetForm.jsx","util/date.js","components/Avatar.jsx","components/EditTweetForm.jsx","components/TweetCard.jsx","pages/Login.jsx","context/AuthContext.jsx","components/Tweets.jsx","pages/AllTweets.jsx","pages/MyTweets.jsx","App.jsx","service/auth.js","service/tweet.js","network/http.js","db/token.js","network/socket.js","index.js"],"names":["Header","memo","_ref","username","onLogout","onMyTweets","onAllTweets","_jsxs","className","children","_jsx","src","alt","onClick","Banner","text","isAlert","_Fragment","concat","NewTweetForm","tweetService","onError","_useState","useState","_useState2","_slicedToArray","tweet","setTweet","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","preventDefault","postTweet","then","created","catch","stop","_x","apply","arguments","type","placeholder","value","required","autoFocus","onChange","target","parseDate","tdate","Date","parse","now","diff","Math","floor","round","month","toLocaleDateString","getDate","Avatar","url","name","charAt","EditTweetForm","onUpdate","onClose","setText","id","TweetCard","owner","onDelete","onUsernameClick","createdAt","editing","setEditing","Login","onSignUp","onLogin","signup","setSignup","_useState3","_useState4","setUsername","_useState5","_useState6","password","setPassword","_useState7","_useState8","setName","_useState9","_useState10","email","setEmail","_useState11","_useState12","setURL","_useState13","_useState14","_useState15","_useState16","setIsAlert","setError","error","toString","_event$target","checked","htmlFor","AuthContext","createContext","contextRef","createRef","AuthProvider","authService","authErrorEventBus","undefined","user","setUser","useImperativeHandle","token","useEffect","listen","err","console","log","me","signUp","useCallback","abrupt","_x2","_x3","_x4","_x5","logIn","_ref3","_callee2","_context2","login","_x6","_x7","logout","_callee3","_context3","context","useMemo","Provider","AuthErrorEventBus","_classCallCheck","_createClass","key","callback","this","useAuth","useContext","Tweets","addable","tweets","setTweets","history","useHistory","getTweets","_toConsumableArray","stopSync","onSync","onCreated","tweetId","deleteTweet","filter","updateTweet","updated","map","item","push","setTimeout","transient","length","AllTweets","MyTweets","useParams","App","_useAuth","window","confirm","Switch","Route","exact","path","AuthService","http","tokenStorage","_signup","data","fetch","method","body","JSON","stringify","sent","saveToken","_login","_me","getToken","headers","Authorization","_logout","_callee4","_context4","clearToken","TweetService","socket","_getTweets","query","getHeaders","_postTweet","_deleteTweet","_updateTweet","HttpClient","baseURL","_fetch","options","res","message","_objectSpread","json","t0","status","Error","TOKEN","TokenStorage","localStorage","setItem","getItem","clear","Socket","getAccessToken","io","auth","cb","on","_this","connected","connect","off","process","httpClient","socketClient","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.312b3c9f.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\nconst Header = memo(({ username, onLogout, onMyTweets, onAllTweets }) => {\n  return (\n    <header className='header'>\n      <div className='logo'>\n        <img src='./img/logo.png' alt='Dwitter Logo' className='logo-img' />\n        <h1 className='logo-name'>Dwitter</h1>\n        {username && <span className='logo-user'>@{username}</span>}\n      </div>\n      {username && (\n        <nav className='menu'>\n          <button onClick={onAllTweets}>All Tweets</button>\n          <button onClick={onMyTweets}>My Tweets</button>\n          <button className='menu-item' onClick={onLogout}>\n            Logout\n          </button>\n        </nav>\n      )}\n    </header>\n  );\n});\n\nexport default Header;\n","import React, { memo } from 'react';\n\nconst Banner = memo(({ text, isAlert }) => (\n  <>\n    {text && (\n      <p className={`banner ${isAlert ? 'banner-red' : 'banner-green'}`}>\n        {text}\n      </p>\n    )}\n  </>\n));\nexport default Banner;\n","import React, { useState } from 'react';\n\nconst NewTweetForm = ({ tweetService, onError }) => {\n  const [tweet, setTweet] = useState('');\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    tweetService\n      .postTweet(tweet)\n      .then((created) => {\n        setTweet('');\n      })\n      .catch(onError);\n  };\n\n  const onChange = (event) => {\n    setTweet(event.target.value);\n  };\n\n  return (\n    <form className='tweet-form' onSubmit={onSubmit}>\n      <input\n        type='text'\n        placeholder='Edit your tweet'\n        value={tweet}\n        required\n        autoFocus\n        onChange={onChange}\n        className='form-input tweet-input'\n      />\n      <button type='submit' className='form-btn'>\n        Post\n      </button>\n    </form>\n  );\n};\n\nexport default NewTweetForm;\n","export default function parseDate(tdate) {\n  const created = new Date(Date.parse(tdate));\n  const now = new Date();\n  const diff = Math.floor((now - created) / 1000);\n  if (diff <= 1) {\n    return 'just now';\n  }\n  if (diff < 20) {\n    return diff + ' seconds ago';\n  }\n  if (diff < 40) {\n    return 'half a minute ago';\n  }\n  if (diff < 60) {\n    return 'less than a minute ago';\n  }\n  if (diff <= 90) {\n    return 'one minute ago';\n  }\n  if (diff <= 3540) {\n    return Math.round(diff / 60) + ' minutes ago';\n  }\n  if (diff <= 5400) {\n    return '1 hour ago';\n  }\n  if (diff <= 86400) {\n    return Math.round(diff / 3600) + ' hours ago';\n  }\n  if (diff <= 129600) {\n    return '1 day ago';\n  }\n  if (diff < 604800) {\n    return Math.round(diff / 86400) + ' days ago';\n  }\n  if (diff <= 777600) {\n    return '1 week ago';\n  }\n  const month = created.toLocaleDateString('default', { month: 'long' });\n  return `on ${month} ${created.getDate()}`;\n}\n","import React, { memo } from 'react';\n\nconst Avatar = memo(({ url, name }) => (\n  <div>\n    {!!url ? (\n      <img src={url} alt='avatar' className='avatar-img' />\n    ) : (\n      <div className='avatar-txt'>{name.charAt(0)}</div>\n    )}\n  </div>\n));\n\nexport default Avatar;\n","import React, { useState } from 'react';\n\nconst EditTweetForm = ({ tweet, onUpdate, onClose }) => {\n  const [text, setText] = useState(tweet.text);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    onUpdate(tweet.id, text);\n    onClose();\n  };\n\n  const onChange = (event) => {\n    setText(event.target.value);\n  };\n\n  return (\n    <form className='edit-tweet-form' onSubmit={onSubmit}>\n      <input\n        type='text'\n        placeholder='Edit your tweet'\n        value={text}\n        required\n        autoFocus\n        onChange={onChange}\n        className='form-input tweet-input'\n      />\n      <div className='edit-tweet-form-action'>\n        <button type='submit' className='form-btn-update'>\n          Update\n        </button>\n        <button type='button' className='form-btn-cancel' onClick={onClose}>\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default EditTweetForm;\n","import React, { memo, useState } from 'react';\nimport parseDate from '../util/date';\nimport Avatar from './Avatar';\nimport EditTweetForm from './EditTweetForm';\n\nconst TweetCard = memo(\n  ({ tweet, owner, onDelete, onUpdate, onUsernameClick }) => {\n    const { id, username, name, url, text, createdAt } = tweet;\n    const [editing, setEditing] = useState(false);\n    const onClose = () => setEditing(false);\n\n    return (\n      <li className='tweet'>\n        <section className='tweet-container'>\n          <Avatar url={url} name={name} />\n          <div className='tweet-body'>\n            <span className='tweet-name'>{name}</span>\n            <span\n              className='tweet-username'\n              onClick={() => onUsernameClick(tweet)}\n            >\n              @{username}\n            </span>\n            <span className='tweet-date'> · {parseDate(createdAt)}</span>\n            <p>{text}</p>\n            {editing && (\n              <EditTweetForm\n                tweet={tweet}\n                onUpdate={onUpdate}\n                onClose={onClose}\n              />\n            )}\n          </div>\n        </section>\n        {owner && (\n          <div className='tweet-action'>\n            <button className='tweet-action-btn' onClick={() => onDelete(id)}>\n              x\n            </button>\n            <button\n              className='tweet-action-btn'\n              onClick={() => setEditing(true)}\n            >\n              ✎\n            </button>\n          </div>\n        )}\n      </li>\n    );\n  }\n);\nexport default TweetCard;\n","import React, { useState } from 'react';\nimport Banner from '../components/Banner';\n\nconst Login = ({ onSignUp, onLogin }) => {\n  const [signup, setSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [url, setURL] = useState('');\n  const [text, setText] = useState('');\n  const [isAlert, setIsAlert] = useState(false);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (signup) {\n      onSignUp(username, password, name, email, url).catch(setError);\n    } else {\n      onLogin(username, password).catch(setError);\n    }\n  };\n\n  const setError = (error) => {\n    setText(error.toString());\n    setIsAlert(true);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { name, value, checked },\n    } = event;\n    switch (name) {\n      case 'username':\n        return setUsername(value);\n      case 'password':\n        return setPassword(value);\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'url':\n        return setURL(value);\n      case 'signup':\n        return setSignup(checked);\n      default:\n    }\n  };\n\n  return (\n    <>\n      <Banner text={text} isAlert={isAlert} />\n      <form className='auth-form' onSubmit={onSubmit}>\n        <input\n          name='username'\n          type='text'\n          placeholder='Id'\n          value={username}\n          onChange={onChange}\n          className='form-input'\n          required\n        />\n        <input\n          name='password'\n          type='password'\n          placeholder='Password'\n          value={password}\n          className='form-input'\n          onChange={onChange}\n        />\n        {signup && (\n          <input\n            name='name'\n            type='text'\n            placeholder='Name'\n            value={name}\n            onChange={onChange}\n            className='form-input'\n            required\n          />\n        )}\n        {signup && (\n          <input\n            name='email'\n            type='email'\n            placeholder='Email'\n            value={email}\n            onChange={onChange}\n            className='form-input'\n            required\n          />\n        )}\n        {signup && (\n          <input\n            name='url'\n            type='url'\n            placeholder='Profile Image URL'\n            value={url}\n            onChange={onChange}\n            className='form-input'\n          />\n        )}\n        <div className='form-signup'>\n          <input\n            name='signup'\n            id='signup'\n            type='checkbox'\n            onChange={onChange}\n            checked={signup}\n          />\n          <label htmlFor='signup'> Create a new account?</label>\n        </div>\n        <button className='form-btn auth-form-btn' type='submit'>\n          {signup ? 'Sign Up' : 'Sign In'}\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Login;\n","import {\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useState,\n} from 'react';\nimport Header from '../components/Header';\nimport Login from '../pages/Login';\n\nconst AuthContext = createContext({});\n\nconst contextRef = createRef();\n\nexport function AuthProvider({ authService, authErrorEventBus, children }) {\n  const [user, setUser] = useState(undefined);\n\n  useImperativeHandle(contextRef, () => (user ? user.token : undefined));\n\n  useEffect(() => {\n    authErrorEventBus.listen((err) => {\n      console.log(err);\n      setUser(undefined);\n    });\n  }, [authErrorEventBus]);\n\n  useEffect(() => {\n    authService.me().then(setUser).catch(console.error);\n  }, [authService]);\n\n  const signUp = useCallback(\n    async (username, password, name, email, url) =>\n      authService\n        .signup(username, password, name, email, url)\n        .then((user) => setUser(user)),\n    [authService]\n  );\n\n  const logIn = useCallback(\n    async (username, password) =>\n      authService.login(username, password).then((user) => setUser(user)),\n    [authService]\n  );\n\n  const logout = useCallback(\n    async () => authService.logout().then(() => setUser(undefined)),\n    [authService]\n  );\n\n  const context = useMemo(\n    () => ({\n      user,\n      signUp,\n      logIn,\n      logout,\n    }),\n    [user, signUp, logIn, logout]\n  );\n\n  return (\n    <AuthContext.Provider value={context}>\n      {user ? (\n        children\n      ) : (\n        <div className='app'>\n          <Header />\n          <Login onSignUp={signUp} onLogin={logIn} />\n        </div>\n      )}\n    </AuthContext.Provider>\n  );\n}\n\nexport class AuthErrorEventBus {\n  listen(callback) {\n    this.callback = callback;\n  }\n  notify(error) {\n    this.callback(error);\n  }\n}\n\nexport default AuthContext;\nexport const fetchToken = () => contextRef.current;\nexport const useAuth = () => useContext(AuthContext);\n","import React, { memo, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Banner from './Banner';\nimport NewTweetForm from './NewTweetForm';\nimport TweetCard from './TweetCard';\nimport { useAuth } from '../context/AuthContext';\n\nconst Tweets = memo(({ tweetService, username, addable }) => {\n  const [tweets, setTweets] = useState([]);\n  const [error, setError] = useState('');\n  const history = useHistory();\n  const { user } = useAuth();\n\n  useEffect(() => {\n    tweetService\n      .getTweets(username)\n      .then((tweets) => setTweets([...tweets]))\n      .catch(onError);\n\n    const stopSync = tweetService.onSync((tweet) => onCreated(tweet));\n    return () => stopSync();\n  }, [tweetService, username, user]);\n\n  const onCreated = (tweet) => {\n    setTweets((tweets) => [tweet, ...tweets]);\n  };\n\n  const onDelete = (tweetId) =>\n    tweetService\n      .deleteTweet(tweetId)\n      .then(() =>\n        setTweets((tweets) => tweets.filter((tweet) => tweet.id !== tweetId))\n      )\n      .catch((error) => setError(error.toString()));\n\n  const onUpdate = (tweetId, text) =>\n    tweetService\n      .updateTweet(tweetId, text)\n      .then((updated) =>\n        setTweets((tweets) =>\n          tweets.map((item) => (item.id === updated.id ? updated : item))\n        )\n      )\n      .catch((error) => error.toString());\n\n  const onUsernameClick = (tweet) => history.push(`/${tweet.username}`);\n\n  const onError = (error) => {\n    setError(error.toString());\n    setTimeout(() => {\n      setError('');\n    }, 3000);\n  };\n\n  return (\n    <>\n      {addable && (\n        <NewTweetForm tweetService={tweetService} onError={onError} />\n      )}\n      {error && <Banner text={error} isAlert={true} transient={true} />}\n      {tweets.length === 0 && <p className='tweets-empty'>No Tweets Yet</p>}\n      <ul className='tweets'>\n        {tweets.map((tweet) => (\n          <TweetCard\n            key={tweet.id}\n            tweet={tweet}\n            owner={tweet.username === user.username}\n            onDelete={onDelete}\n            onUpdate={onUpdate}\n            onUsernameClick={onUsernameClick}\n          />\n        ))}\n      </ul>\n    </>\n  );\n});\nexport default Tweets;\n","import React from 'react';\nimport Tweets from '../components/Tweets';\n\nconst AllTweets = ({ tweetService }) => (\n  <Tweets tweetService={tweetService} addable={true} />\n);\n\nexport default AllTweets;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Tweets from '../components/Tweets';\n\nconst MyTweets = ({ tweetService }) => {\n  const { username } = useParams();\n  return (\n    <Tweets tweetService={tweetService} username={username} addable={false} />\n  );\n};\n\nexport default MyTweets;\n","import { Switch, Route, useHistory } from 'react-router-dom';\nimport Header from './components/Header';\nimport AllTweets from './pages/AllTweets';\nimport MyTweets from './pages/MyTweets';\nimport { useAuth } from './context/AuthContext';\n\nfunction App({ tweetService }) {\n  const history = useHistory();\n  const { user, logout } = useAuth();\n\n  const onAllTweets = () => {\n    history.push('/');\n  };\n\n  const onMyTweets = () => {\n    history.push(`/${user.username}`);\n  };\n\n  const onLogout = () => {\n    if (window.confirm('Do you want to log out?')) {\n      logout();\n      history.push('/');\n    }\n  };\n\n  return (\n    <div className='app'>\n      <Header\n        username={user.username}\n        onLogout={onLogout}\n        onAllTweets={onAllTweets}\n        onMyTweets={onMyTweets}\n      />\n      <Switch>\n        (\n        <>\n          <Route exact path='/'>\n            <AllTweets tweetService={tweetService} />\n          </Route>\n          <Route exact path='/:username'>\n            <MyTweets tweetService={tweetService} />\n          </Route>\n        </>\n        )\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","export default class AuthService {\n  constructor(http, tokenStorage) {\n    this.http = http;\n    this.tokenStorage = tokenStorage;\n  }\n\n  async signup(username, password, name, email, url) {\n    const data = await this.http.fetch('/auth/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password,\n        name,\n        email,\n        url,\n      }),\n    });\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  }\n\n  async login(username, password) {\n    const data = await this.http.fetch('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({ username, password }),\n    });\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  }\n\n  async me() {\n    const token = this.tokenStorage.getToken();\n    return this.http.fetch('/auth/me', {\n      method: 'GET',\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  }\n\n  async logout() {\n    this.tokenStorage.clearToken();\n  }\n}\n","export default class TweetService {\n  constructor(http, tokenStorage, socket) {\n    this.http = http;\n    this.tokenStorage = tokenStorage;\n    this.socket = socket;\n  }\n\n  async getTweets(username) {\n    const query = username ? `?username=${username}` : '';\n    return this.http.fetch(`/tweets${query}`, {\n      method: 'GET',\n      headers: this.getHeaders(),\n    });\n  }\n\n  async postTweet(text) {\n    return this.http.fetch(`/tweets`, {\n      method: 'POST',\n      headers: this.getHeaders(),\n      body: JSON.stringify({ text, username: 'ellie', name: 'Ellie' }),\n    });\n  }\n\n  async deleteTweet(tweetId) {\n    return this.http.fetch(`/tweets/${tweetId}`, {\n      method: 'DELETE',\n      headers: this.getHeaders(),\n    });\n  }\n\n  async updateTweet(tweetId, text) {\n    return this.http.fetch(`/tweets/${tweetId}`, {\n      method: 'PUT',\n      headers: this.getHeaders(),\n      body: JSON.stringify({ text }),\n    });\n  }\n\n  getHeaders() {\n    const token = this.tokenStorage.getToken();\n    return {\n      Authorization: `Bearer ${token}`,\n    };\n  }\n\n  onSync(callback) {\n    return this.socket.onSync('tweets', callback);\n  }\n}\n","export default class HttpClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  async fetch(url, options) {\n    const res = await fetch(`${this.baseURL}${url}`, {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n    });\n    let data;\n    try {\n      data = await res.json();\n    } catch (error) {\n      console.error(error);\n    }\n\n    if (res.status > 299 || res.status < 200) {\n      const message =\n        data && data.message ? data.message : 'Something went wrong! 🤪';\n      throw new Error(message);\n    }\n    return data;\n  }\n}\n","const TOKEN = 'token';\n\nexport default class TokenStorage {\n  saveToken(token) {\n    localStorage.setItem(TOKEN, token);\n  }\n\n  getToken() {\n    return localStorage.getItem(TOKEN);\n  }\n\n  clearToken() {\n    localStorage.clear(TOKEN);\n  }\n}\n","import socket from 'socket.io-client';\n\nexport default class Socket {\n  constructor(baseURL, getAccessToken) {\n    this.io = socket(baseURL, {\n      auth: (cb) => cb({ token: getAccessToken() }),\n    });\n\n    this.io.on('connect_error', (err) => {\n      console.log('socket error', err.message);\n    });\n  }\n\n  onSync(event, callback) {\n    if (!this.io.connected) {\n      this.io.connect();\n    }\n\n    this.io.on(event, (message) => callback(message));\n    return () => this.io.off(event);\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AuthService from './service/auth';\nimport TweetService from './service/tweet';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AuthProvider } from './context/AuthContext';\nimport { AuthErrorEventBus } from './context/AuthContext';\nimport HttpClient from './network/http';\nimport TokenStorage from './db/token';\nimport Socket from './network/socket';\n\nconst baseURL = process.env.REACT_APP_BASE_URL;\nconst tokenStorage = new TokenStorage();\nconst httpClient = new HttpClient(baseURL);\nconst authErrorEventBus = new AuthErrorEventBus();\nconst authService = new AuthService(httpClient, tokenStorage);\nconst socketClient = new Socket(baseURL, () => tokenStorage.getToken());\nconst tweetService = new TweetService(httpClient, tokenStorage, socketClient);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthProvider\n        authService={authService}\n        authErrorEventBus={authErrorEventBus}\n      >\n        <App tweetService={tweetService} />\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}